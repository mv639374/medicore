# The template file Alembic uses to generate new migration scripts.
# What & Why: We typically don't need to modify this file. It provides the standard structure for a migration script, with upgrade() and downgrade() functions that define how to apply and reverse a database schema change.

"""Add quality metrics and processing status to studies

Revision ID: ca977cf97fe3
Revises: 8099342bea2a
Create Date: 2025-10-07 09:42:38.148466

"""
from alembic import op
import sqlalchemy as sa


# revision identifiers, used by Alembic.
revision = 'ca977cf97fe3'
down_revision = '8099342bea2a'
branch_labels = None
depends_on = None


def upgrade():
    # ### commands auto generated by Alembic - please adjust! ###
    op.add_column('dicom_studies', sa.Column('processing_status', sa.String(length=20), nullable=False))
    op.add_column('dicom_studies', sa.Column('processing_error', sa.Text(), nullable=True))
    op.add_column('dicom_studies', sa.Column('processed_at', sa.DateTime(), nullable=True))
    op.add_column('dicom_studies', sa.Column('quality_metrics', sa.JSON(), nullable=True))
    op.create_index(op.f('ix_dicom_studies_processing_status'), 'dicom_studies', ['processing_status'], unique=False)
    # ### end Alembic commands ###


def downgrade():
    # ### commands auto generated by Alembic - please adjust! ###
    op.drop_index(op.f('ix_dicom_studies_processing_status'), table_name='dicom_studies')
    op.drop_column('dicom_studies', 'quality_metrics')
    op.drop_column('dicom_studies', 'processed_at')
    op.drop_column('dicom_studies', 'processing_error')
    op.drop_column('dicom_studies', 'processing_status')
    # ### end Alembic commands ###
