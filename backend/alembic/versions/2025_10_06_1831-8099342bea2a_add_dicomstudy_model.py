# The template file Alembic uses to generate new migration scripts.
# What & Why: We typically don't need to modify this file. It provides the standard structure for a migration script, with upgrade() and downgrade() functions that define how to apply and reverse a database schema change.

"""Add DICOMStudy model

Revision ID: 8099342bea2a
Revises: 848cacde6ec0
Create Date: 2025-10-06 18:31:44.948441

"""
from alembic import op
import sqlalchemy as sa


# revision identifiers, used by Alembic.
revision = '8099342bea2a'
down_revision = '848cacde6ec0'
branch_labels = None
depends_on = None


def upgrade():
    # ### commands auto generated by Alembic - please adjust! ###
    op.create_table('dicom_studies',
    sa.Column('id', sa.UUID(), nullable=False),
    sa.Column('patient_id', sa.UUID(), nullable=False),
    sa.Column('study_instance_uid', sa.String(length=255), nullable=False),
    sa.Column('series_instance_uid', sa.String(length=255), nullable=False),
    sa.Column('sop_instance_uid', sa.String(length=255), nullable=False),
    sa.Column('modality', sa.String(length=10), nullable=False),
    sa.Column('study_date', sa.Date(), nullable=True),
    sa.Column('study_time', sa.String(length=20), nullable=True),
    sa.Column('study_description', sa.Text(), nullable=True),
    sa.Column('institution_name', sa.String(length=255), nullable=True),
    sa.Column('manufacturer', sa.String(length=255), nullable=True),
    sa.Column('s3_bucket', sa.String(length=255), nullable=False),
    sa.Column('s3_key', sa.String(length=500), nullable=False),
    sa.Column('created_at', sa.DateTime(), nullable=False),
    sa.Column('updated_at', sa.DateTime(), nullable=False),
    sa.ForeignKeyConstraint(['patient_id'], ['patients.id'], ),
    sa.PrimaryKeyConstraint('id'),
    sa.UniqueConstraint('sop_instance_uid')
    )
    op.create_index(op.f('ix_dicom_studies_modality'), 'dicom_studies', ['modality'], unique=False)
    op.create_index(op.f('ix_dicom_studies_patient_id'), 'dicom_studies', ['patient_id'], unique=False)
    op.create_index(op.f('ix_dicom_studies_series_instance_uid'), 'dicom_studies', ['series_instance_uid'], unique=False)
    op.create_index(op.f('ix_dicom_studies_study_instance_uid'), 'dicom_studies', ['study_instance_uid'], unique=True)
    op.add_column('users', sa.Column('failed_login_attemps', sa.Integer(), nullable=True))
    op.add_column('users', sa.Column('account_locked_until', sa.DateTime(), nullable=True))
    # ### end Alembic commands ###


def downgrade():
    # ### commands auto generated by Alembic - please adjust! ###
    op.drop_column('users', 'account_locked_until')
    op.drop_column('users', 'failed_login_attemps')
    op.drop_index(op.f('ix_dicom_studies_study_instance_uid'), table_name='dicom_studies')
    op.drop_index(op.f('ix_dicom_studies_series_instance_uid'), table_name='dicom_studies')
    op.drop_index(op.f('ix_dicom_studies_patient_id'), table_name='dicom_studies')
    op.drop_index(op.f('ix_dicom_studies_modality'), table_name='dicom_studies')
    op.drop_table('dicom_studies')
    # ### end Alembic commands ###
